<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.treetory.test.mvc.mapper.DashboardMapper">
	
	<!-- 조회 : 멀티 
    <select id="getCorelResultDuringRecent10Seconds" parameterType="long" resultType="hashmap">
		SELECT 
				a.id as id, 
		    	convert( a.category, char) as category, 
		    	concat(' ' , convert(a.create_ts, char)) as create_ts, 
				a.message, 
				inet_ntoa(a.s_ip) as s_ip_str,
				a.s_ip as s_ip,  
				inet_ntoa(a.d_ip) as d_ip_str, 
				a.d_ip as d_ip, 
				convert(a.s_port, char(5)) as s_port, 
				convert(a.d_port, char(5)) as d_port, 
				a.protocol_name as protocol_name,  
				a.rule, 
				c.code_name as rule_class_name, 
				convert( a.dev_id, char) as dev_id, 
				f.name,
				a.is_ack, 
				a.ack_user,
				a.org_id,
				a.proxy_id,
				d.name as org_name,
				e.name as proxy_name,
				a.result_id,
				a.create_ts as start,
				ADDTIME(a.create_ts, '00:00:00.800') as end,
				inet_ntoa(a.s_ip) as content,
				a.rule as title
		FROM 
				moca_rule 			as b, 
				moca_attribute 		as c,
				moca_result 		as a
		LEFT OUTER JOIN 
				moca_org 			as d 
		ON 		a.org_id = d.org_id 
		LEFT OUTER JOIN 
				moca_proxy_server 	as e
		ON 		a.proxy_id = e.proxy_id
		LEFT OUTER JOIN 
				moca_device 		as f
		ON 		a.dev_id = f.id
		LEFT OUTER JOIN 
				moca_device_group 	as g
		ON 		f.group_id = g.id
		WHERE 	c.major_code = 9
		AND 	b.att_rule_class = c.minor_code
		AND 	a.rule = b.name
		<if test="value != null and value > 0">
			AND		unix_timestamp(create_ts) * 1000 <![CDATA[>=]]> #{value} - (3 * 1000)
			AND 	unix_timestamp(create_ts) * 1000 <![CDATA[< ]]>	#{value}
		</if>
		<if test="value == 0">
			AND		a.s_ip != 0
			LIMIT	10
		</if>
	</select>
	-->
	<!-- 상관분석 생성 개수 보여주기 위함 : 5초 인터벌로 합산 -->
	<select id="getRecentMocaResultCount" resultType="hashmap">
		<![CDATA[
		SELECT	sum(Z.count) 				as alert_count
		,		Z.create_ts					as create_ts
		FROM	(
				SELECT	count(id) 			as count
				,		create_ts			as create_ts
				FROM	moca_result
				WHERE	unix_timestamp(create_ts) >= unix_timestamp(curdate()) 
				AND 	unix_timestamp(create_ts) <= unix_timestamp(ADDDATE(curdate(), 1))
				GROUP BY
						create_ts
				UNION
				SELECT	0 					as count
				,		now()				as create_ts
				FROM	DUAL
				UNION
		        SELECT	0 					as count
				,		ADDTIME(now(), -1)	as create_ts
				FROM	DUAL
		        UNION
		        SELECT	0 					as count
				,		ADDTIME(now(), -2)	as create_ts
				FROM	DUAL
				)	Z
		GROUP BY
				Z.create_ts
		ORDER BY
				create_ts DESC
		LIMIT	3
		]]>
	</select>
	
	<select id="getCorelResultDuringRecent10Seconds" parameterType="long" resultType="hashmap">
		SELECT 
				a.id as id, 
		        h.id as "group",
				convert( a.category, char) as category, 
				concat(' ' , convert(a.create_ts, char)) as create_ts, 
				a.message, 
				inet_ntoa(a.s_ip) as s_ip_str,
				a.s_ip as s_ip,  
				inet_ntoa(a.d_ip) as d_ip_str, 
				a.d_ip as d_ip, 
				convert(a.s_port, char(5)) as s_port, 
				convert(a.d_port, char(5)) as d_port, 
				a.protocol_name as protocol_name,  
				a.rule, 
				c.code_name as rule_class_name, 
				convert( a.dev_id, char) as dev_id, 
				f.name,
				a.is_ack, 
				a.ack_user,
				a.org_id,
				a.proxy_id,
				d.name as org_name,
				e.name as proxy_name,
				a.result_id,
				a.create_ts as start,
				ADDTIME(a.create_ts, '00:00:00.800') as end,
				a.rule as title
		FROM 
				moca_rule 			as b, 
				moca_attribute 		as c,
				moca_result 		as a
		LEFT OUTER JOIN 
				moca_org 			as d 
		ON 		a.org_id = d.org_id 
		LEFT OUTER JOIN 
				moca_proxy_server 	as e
		ON 		a.proxy_id = e.proxy_id
		LEFT OUTER JOIN 
				moca_device 		as f
		ON 		a.dev_id = f.id
		LEFT OUTER JOIN 
				moca_device_group 	as g
		ON 		f.group_id = g.id
		INNER JOIN
				tbl_endpoint_status	as h
		ON		(a.s_ip = h.ip_addr OR a.d_ip = h.ip_addr)
		WHERE 	c.major_code = 9
		AND 	b.att_rule_class = c.minor_code
		AND 	a.rule = b.name
		<if test="value != null and value > 0">
			AND		unix_timestamp(create_ts) * 1000 <![CDATA[>=]]> #{value} - (3 * 1000)
			AND 	unix_timestamp(create_ts) * 1000 <![CDATA[< ]]>	#{value}
		</if>
		<if test="value == 0">
			AND		a.s_ip != 0
			LIMIT	10
		</if>
	</select>
	
	<select id="getEndpointAsset" resultType="hashmap">
		SELECT	id					AS id
		,		device_id			AS deviceId
		,		ext_collector_id	AS extCollectorId
		,		device_name			AS deviceName
		,		group_id			AS groupId
		,		group_name			AS groupName
		,		host_id				AS hostId
		,		host_name			AS hostName
		,		ip_addr				AS ipAddr
		,		inet_ntoa(ip_addr)	AS ipAddrStr
		,		mac_addr			AS macAddr
		,		status				AS status
		,		virus_count			AS virusCount
		,		open_ports			AS openPorts
		,		online_status		AS onlineStatus
		,		CASE WHEN online_status = 0 THEN "CONNECTED" ELSE "DISCONNECTED" END AS onlineStatusStr
		,		check_time			AS checkTime
		,		exist_yn			AS existYn
		,		inet_ntoa(ip_addr) 	AS content
		FROM	tbl_endpoint_status	
	</select>
	
	<select id="getVirusNormalizedLogStatisticsByName" resultType="hashmap">
		SELECT	X.count 											as data
		,		CASE WHEN X.signature_name is not null THEN X.signature_name ELSE 'UNKNOWN' END	as name
		FROM	(
				SELECT	count(Y.id)									as count
				,		Y.base_date
				,		Y.event_class
				,		Y.signature_name
				FROM	(
						SELECT 	Z.*
						,		date_format(Z.create_time, "%Y-%m")	as base_date
						FROM 	mocalog_main	Z
						WHERE	event_class = 'VIRUS'
						)	Y
				WHERE	Y.base_date = date_format(now(), "%Y-%m")
				GROUP BY 
						Y.base_date, 
						Y.event_class,
						Y.signature_name
		        )	X
		ORDER BY 
				X.count DESC;
	</select>
	
	<select id="getVirusNormalizedLogStatisticsByDip" resultType="hashmap">
		SELECT	X.count 											as data
		,		X.d_ip 												as name
		FROM	(
				SELECT	count(Y.id)									as count
				,		Y.base_date
				,		Y.event_class
				,		inet_ntoa(Y.d_ip)							as d_ip
				FROM	(
						SELECT 	Z.*
						,		date_format(Z.create_time, "%Y-%m")	as base_date
						FROM 	mocalog_main	Z
						WHERE	event_class = 'VIRUS'
						)	Y
				WHERE	Y.base_date = date_format(now(), "%Y-%m")
				GROUP BY 
						Y.base_date, 
						Y.event_class,
						Y.d_ip
		        )	X
		ORDER BY 
				X.count DESC;
	</select>
	
	<select id="getNacNormalizedLogStatisticsByEvent" resultType="hashmap">
		SELECT	X.count 											as data
		,		X.event 											as name
		FROM	(
				SELECT	count(Y.id)									as count
				,		Y.base_date
				,		Y.event_class
				,		Y.event
				FROM	(
						SELECT 	Z.*
						,		date_format(Z.create_time, "%Y-%m")	as base_date
						FROM 	mocalog_main	Z
						WHERE	event_class = 'NAC'
						)	Y
				WHERE	Y.base_date = date_format(now(), "%Y-%m")
				GROUP BY 
						Y.base_date, 
						Y.event_class,
						Y.event
		        )	X
		ORDER BY 
				X.count DESC;
	</select>
	
	<select id="getNacNormalizedLogStatisticsBySip" resultType="hashmap">
		SELECT	X.count 											as data
		,		X.s_ip 												as name
		FROM	(
				SELECT	count(Y.id)									as count
				,		Y.base_date
				,		Y.event_class
				,		inet_ntoa(Y.s_ip)							as s_ip
				FROM	(
						SELECT 	Z.*
						,		date_format(Z.create_time, "%Y-%m")	as base_date
						FROM 	mocalog_main	Z
						WHERE	event_class = 'NAC'
						)	Y
				WHERE	Y.base_date = date_format(now(), "%Y-%m")
				GROUP BY 
						Y.base_date, 
						Y.event_class,
						Y.s_ip
		        )	X
		ORDER BY 
				X.count DESC;
	</select>
	
	<select id="getMocaResultStatisticsByRule" resultType="hashmap">
		<![CDATA[
		SELECT	Y.count 											as data
		,		Y.rule												as name
		FROM	(
				SELECT 	count(Z.id)									as count
				,		Z.p_idx
				,		Z.rule
				FROM 	moca_result	Z
				WHERE	Z.p_idx = (SELECT CASE WHEN month(now()) < 10 THEN concat(year(now()), '0', month(now()))  ELSE concat(year(now()), month(now())) END as p_idx FROM DUAL)
				GROUP BY
						Z.rule
		        )	Y
		ORDER BY
				Y.count DESC
		]]>
	</select>
	
	<select id="getMocaResultStatisticsBySip" resultType="hashmap">
		<![CDATA[
		SELECT	Y.count 											as data
		,		Y.s_ip												as name
		FROM	(
				SELECT 	count(Z.id)									as count
				,		Z.p_idx
				,		Z.rule
		        ,		inet_ntoa(Z.s_ip)							as s_ip
				FROM 	moca_result	Z
				WHERE	Z.p_idx = (SELECT CASE WHEN month(now()) < 10 THEN concat(year(now()), '0', month(now()))  ELSE concat(year(now()), month(now())) END as p_idx FROM DUAL)
		        AND		Z.s_ip != 0
				GROUP BY
						Z.s_ip
		        )	Y
		ORDER BY
				Y.count DESC		
		]]>
	</select>
	
	<select id="getMocaResultStatisticsByDip" resultType="hashmap">
		<![CDATA[
		SELECT	Y.count 											as data
		,		Y.d_ip												as name
		FROM	(
				SELECT 	count(Z.id)									as count
				,		Z.p_idx
				,		Z.rule
		        ,		inet_ntoa(Z.d_ip)							as d_ip
				FROM 	moca_result	Z
				WHERE	Z.p_idx = (SELECT CASE WHEN month(now()) < 10 THEN concat(year(now()), '0', month(now()))  ELSE concat(year(now()), month(now())) END as p_idx FROM DUAL)
		        AND		Z.d_ip != 0
				GROUP BY
						Z.d_ip
		        )	Y
		ORDER BY
				Y.count DESC
		;
		]]>
	</select>
	
	<!-- Deprecated -->
	<!-- 테스트용 - mockup 생성을 위해 잠깐 만든 것임 -->
	<insert id="insertMocaResultTest" parameterType="java.util.List">
		insert
		into	moca_result
		(		result_id
		,		p_idx
		,		rule
		,		create_ts
		,		message
		,		alert_by
		,		alert_to
		,		dev_id
		,		org_id
		,		proxy_id
		,		protocol_name
		,		s_ip
		,		s_port
		,		d_ip
		,		d_port
		)
		values
		<foreach collection="list" item="item" separator="),(" open="(" close=")">
				#{item.result_id}
			,	201807
			,	#{item.rule}
			,	now()
			,	#{item.message}
			,	#{item.alert_by}
			,	#{item.alert_to}
			,	#{item.dev_id}
			,	#{item.org_id}
			,	#{item.proxy_id}
			,	#{item.protocol_name}
			,	#{item.s_ip}
			,	#{item.s_port}
			,	#{item.d_ip}
			,	#{item.d_port}
		</foreach>
	</insert>
	
</mapper>